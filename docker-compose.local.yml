services:
  fastapi:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8001:8000"
    env_file:
      - .env.development
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./api/app:/app/app  # Hot reload for development
      - ./tracking:/app/tracking
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    dns:
    - 8.8.8.8
    - 1.1.1.1
  
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d/
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./tracking/testing:/usr/share/nginx/html:ro
    depends_on:
      - fastapi
    restart: unless-stopped

volumes:
  postgres_data: